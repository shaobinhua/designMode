在JAVA语言的java.util库里面，提供了一个Observable类以及一个Observer接口，构成JAVA语言对观察者模式的支持。
Observer接口:
　这个接口只定义了一个方法，即update()方法，当被观察者对象的状态发生变化时，被观察者对象的notifyObservers()方法就会调用这一方法。
Observable类:
 被观察者类都是java.util.Observable类的子类。
 java.util.Observable提供公开的方法支持观察者对象，这些方法中有两个对Observable的子类非常重要：
 一个是setChanged()，另一个是notifyObservers()。
 第一方法setChanged()被调用之后会设置一个内部标记变量，代表被观察者对象的状态发生了变化。
 第二个是notifyObservers()，这个方法被调用时，会调用所有登记过的观察者对象的update()方法，使这些观察者对象可以更新自己。

 Client对象首先创建了Watched和Watcher对象。
  Client直接登记观察者
  Client1在创建Watcher对象时，将Watched对象作为参数传入，通过构造函数登记；
 然后Client对象调用Watched对象的change()方法，触发Watched对象的内部状态变化；
 Watched对象进而通知实现登记过的Watcher对象，也就是调用它的update()方法。