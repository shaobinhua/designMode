Default Adapter模式为一个接口提供缺省实现，这样子类型可以从这个缺省实现进行扩展，而不必从原有接口进行扩展
作为适配器模式的一个特例，缺省是适配模式在JAVA语言中有着特殊的应用
在很多情况下，必须让一个具体类实现某一个接口，但是这个类又用不到接口所规定的所有的方法。
通常的处理方法是，这个具体类要实现所有的方法，那些有用的方法要有实现，那些没有用的方法也要有空的、平庸的实现。
这些空的方法是一种浪费，有时也是一种混乱。除非看过这些空方法的代码，程序员可能会以为这些方法不是空的。
即便他知道其中有一些方法是空的，也不一定知道哪些方法是空的，哪些方法不是空的，除非看过这些方法的源代码或是文档。
缺省适配模式可以很好的处理这一情况。
可以设计一个抽象的适配器类实现接口，此抽象类要给接口所要求的每一种方法都提供一个空的方法,使它的具体子类免于被迫实现空的方法。

接口AbstractService要求定义三个方法，分别是serviceOperation1()、serviceOperation2()、serviceOperation3()；
而抽象适配器类DefaultAdapter则为这三种方法都提供了平庸的实现。
因此，任何继承自抽象类DefaultAdapter的具体类都可以选择它所需要的方法实现，而不必理会其他的不需要的方法。
适配器模式的用意是要改变源的接口，以便于目标接口相容。
缺省适配的用意稍有不同，它是为了方便建立一个不平庸的适配器类而提供的一种平庸实现。