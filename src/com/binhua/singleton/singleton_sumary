作为对象的创建模式，单例模式确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例。这个类称为单例类。
单例类只能有一个实例。
单例类必须自己创建自己的唯一实例。
单例类必须给所有其他对象提供这一实例。

除单例外的方式在构建单例模式时，如果需要序列化该实例，需要做以下几点工作：
①该类需要实现Serializable接口；
②所有的实例域都必须是瞬时的（单例模式的类中可以存在其他的实例域）；
③该类必须提供一个readResolve方法，不然解析回来之后的对象和序列化的对象不是同一个，该方法如下：
private Object readResolve() throws ObjectStreamException {
       return INSTANCE;
}
因为一旦你实现了序列化接口，那么它们不再保持单例了，因为readObject()方法一直返回一个新的对象就像java的构造方法一样

建议使用枚举来创建，枚举单例有序列化和线程安全的保证
不仅能避免多线程同步问题，而且还能防止反序列化重新创建新的对象，即使是在面对复杂的序列化或者是反射攻击的时候。
